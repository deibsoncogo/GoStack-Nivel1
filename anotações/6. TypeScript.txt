Rocketseat Bootcamp GoStack - Nível 1

------> 6. TypeScript
Vamos agora aprender os primeiros conceitos de TypeScript e aplicar nos
projetos que já desenvolvemos até aqui

----> 1. TypeScript
--> Por que TypeScript?
Ela é uma linguagem baseada no JavaScript mais sua diferença é que ela possui
a aplicação de tipagem e com ele conseguimos acessar as mais novas atualizações do Java

Tambem  possui as mesmas funcionalidades do Babel, converção do código para uma
versão aceitavel

O IntelliSense é a inteligencia da IDE onde mostra sugestões de código, para ativar
apertamos o atalho abaixo, ele ainda vai mostrar itens já digitado
  CTRL + ESPAÇO

Com isso o TypeScript informa para o programador as especificações das variaveis
Ele não transforma o JavaScript em uma linguagem autamente tipada pois
será obrigado tipar as variaveis somente quando o usuário não consegue identificar
o tipo que ela possui e suas configurações como obrigação

--> Configurando o projeto
Para criar o arquivo base do todo programa usamos o comando abaixo
  yarn init -y

E devemos instalara o TypeScript em modo desenvolvimento
  yarn add typescript -D

Por terceiro instalador a depencia abaixo que é muito util
  yarn add express

O Visual Studio Code utiliza o TypeScript por debaixo dos panos com a instalção
automatica de todos tipos de tipagem, quando usamos o TypeScript está função do
Visual Studio Code fica inativa assim tendo que nos faça

A instalação de uma tipagem deve ser no modo desenvolvimento como abaixo
  yarn add -D @types/express

O Node não conhece arquivos TypeScript, com isso para poder executalo temos que
converter para JavaScript, para executar a converção utilisamos o comando abaixo
  yarn tsc src/index.ts

O comando acima pode apresentar erros se não realizarmos algumas configurações no
arquivo mestre do TypeScript, para criar ele temos o comando abaixo
  yarn tsc --init

Para evitar que os arquivos convertidos fiquem juntos com os originais podemos
ativar a configuração abaixo dentro do arquivo tsconfig.json informando o caminho
  "outDir": "./dist",                       /* Redirect output structure to the directory. */

--> Quando adicionar tipos
O editor vai avisar quando esquecermos de definir alguma tipagem obrigatoria
Para ver as configurações de extenção basta clicar em cima segurando o control
Para ativar a tipagem do Express precisa realizar um importação, criar uma variavel e vincular a variavel
  import express from 'express';
  const app = express();
  app.get('/', helloWorld);

Caso contrario temos que importar as tipagem e depois vincular como abaixo
  import {Request, Response} from 'express';
  export function nomeDaFuncao(request: Request, response: Response) {}

--> Tipando objetos e vetores
Uma função com muitos parametros vai gerar uma confunção de para que ser cada parametro,
para evitar este problema geramos nomeação a eles, com isso precisa criar um objeto e
definir o tipo do parametro aparte com uma variavel comando abaixo
  interface
